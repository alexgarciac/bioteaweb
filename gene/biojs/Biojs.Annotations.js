
Biojs.Annotations=Biojs.extend({constructor:function(options){this._topicsMap=Biojs.Annotations.TOPIC;},opt:{target:"YourOwnDivId",sparqlUrl:'http://virtuoso.idiginfo.org/sparql',proxyUrl:'biojs/dependencies/proxy/proxy.php',groupBy:"term",filterBy:{field:"topic",value:"uniprot|GO|CHEBI|ICD9|UMLS|fma|MSH|PO|MDDB|NDDF|NDFRT|NCBITaxon"},minFrequency:1},eventTypes:["onDataArrived",],applyFilter:function(filter){if(filter.hasOwnProperty('frequency')){this.opt.minFrequency=filter['frequency'];}
if(filter.hasOwnProperty('topics')){this._topicsMap=Biojs.Utils.clone(Biojs.Annotations.TOPIC);for(var i in filter.topics){for(var t in this._topicsMap){if(this._topicsMap[t].shortName==filter.topics[i]){delete this._topicsMap[t];}}}}
delete this._data;return this.getDataBy(this.opt.groupBy);},cancelRequest:function(){this._request.abort();},getDataBy:function(groupingCriteria,value){return(groupingCriteria==Biojs.Annotations.GROUP_BY_TERM)?this.getDataByTerm(value):this.getDataByTopic(value);},getDataByTerm:function(term){if(this.opt.groupBy!=Biojs.Annotations.GROUP_BY_TERM){this._groupByTerm();}
if(this._data==undefined){this._groupByTerm();}
if(term!=undefined){for(var key in this._data){if(!(key.toLowerCase()===term.toLowerCase()))delete this._data[key];}}
return this._data;},getDataByTopic:function(topic){if(this.opt.groupBy!=Biojs.Annotations.GROUP_BY_TOPIC){this._groupByTopic();}
if(this._data==undefined){this._groupByTopic();}
if(topic!=undefined){for(var key in this._data){if(!(key.toLowerCase()===topic.toLowerCase()))delete this._data[key];}}
return this._data;},getAllEntities:function(){var entities={};var entityURI;for(var r in this._dataBindings){annotation=this._dataBindings[r];entityURI=annotation.topic.value;entities[this._digest(entityURI)]=entityURI;}
return entities;},getItem:function(key){return this._data[key];},getRawData:function(){return this._data;},hasEntity:function(entityID){for(var r in this._dataBindings){annotation=this._dataBindings[r];if(annotation.topic.value==entityID){return true;}}
return false;},iterator:function(){var self=this;var keys=[];for(var key in this._data){keys.push(key);}
return{keys:keys,keyIndex:0,hasNext:function(){return this.keyIndex<this.size();},next:function(){return self._data[this.keys[this.keyIndex++]];},size:function(){return this.keys.length;}}},join:function(a){var result=new Biojs.Annotations(this.opt);var dataBindings1=this._dataBindings;var dataBindings2=a._dataBindings;result._dataBindings=[];for(var i=0;i<dataBindings1.length;i++){try{for(var j=0;j<dataBindings2.length;j++){if(dataBindings1[i].topic.value===dataBindings2[j].topic.value){for(var k=i;k<dataBindings1.length;k++){if(dataBindings1[i].topic.value===dataBindings1[k].topic.value){result._dataBindings.push(dataBindings1[k]);}
i=k;}
for(var k=j;k<dataBindings2.length;k++){if(dataBindings2[j].topic.value===dataBindings2[k].topic.value){result._dataBindings.push(dataBindings2[k]);}
j=k;}}}}catch(e){Biojs.console.log("Topic "+topicURI+" not recognized. Error: "+e.message);}}
if(this.opt.groupBy==Biojs.Annotations.GROUP_BY_TERM){result._groupByTerm();}else if(this.opt.groupBy==Biojs.Annotations.GROUP_BY_TOPIC){result._groupByTopic();}
return result;},requestAnnotations:function(resourceURI,fnCallback){var self=this;var query;if("string"==typeof resourceURI){query='SELECT '+'distinct ?annot fn:upper-case(str(?body)) AS ?term '+'?topic str(?init) AS ?posInit str(?end) AS ?posEnd ?comment '+'WHERE { '+'?annot a aot:ExactQualifier ; '+'ao:annotatesResource <'+resourceURI+'>; '+'ao:body ?body ; '+'ao:hasTopic ?topic ; '+'ao:context ?context . '+'?context rdfs:resource ?resource . '+'OPTIONAL {?context aos:init ?init }. '+'OPTIONAL {?context aos:end ?end } . '+'?resource cnt:chars ?comment .  '}else{query='SELECT '+'distinct ?annot fn:upper-case(str(?body)) AS ?term '+'?topic str(?init) AS ?posInit str(?end) AS ?posEnd ?comment '+'WHERE { '+'?annot a aot:ExactQualifier ; '+'ao:body ?body ; '+'ao:hasTopic ?topic ; '+'ao:context ?context . '+'?context rdfs:resource ?resource . '+'OPTIONAL {?context aos:init ?init }. '+'OPTIONAL {?context aos:end ?end } . '+'?resource cnt:chars ?comment .  '+'{?annot ao:annotatesResource <'+resourceURI[0]+'> . } UNION '+'{?annot ao:annotatesResource <'+resourceURI[1]+'> . } ';}
if(this.opt.groupBy==Biojs.Annotations.GROUP_BY_TERM){query+='FILTER (regex(str(?'+this.opt.filterBy.field+'), "('+this.opt.filterBy.value+')")) . } '
query+='ORDER BY ?term ?topic';}else{query+='FILTER (regex(str(?'+this.opt.filterBy.field+'), "('+this.opt.filterBy.value+')")) . } '
query+='ORDER BY ?topic ?term';}
this._fetchData(this.opt,query,'application/json',function(receivedData){if("function"==typeof fnCallback){fnCallback(self._decodeRawData(receivedData));}else{self._decodeRawData(receivedData);}});},setRawData:function(data){this._data=data;},_decodeRawData:function(rawData){var result;var dataInJSON;this._dataBindings=null;try{dataInJSON=jQuery.parseJSON(rawData);this._dataBindings=dataInJSON.results.bindings;if(this.opt.groupBy==Biojs.Annotations.GROUP_BY_TERM){result=this._groupByTerm();}else if(this.opt.groupBy==Biojs.Annotations.GROUP_BY_TOPIC){result=this._groupByTopic();}}catch(e){Biojs.console.log("Error decoding response data: "+e.message);}
return result;},_digest:function(str){var hash=5381;for(i=0;i<str.length;i++){char=str.charCodeAt(i);hash=((hash<<5)+hash)+char;}
return hash;},_fetchData:function(opt,query,format,fnCallback){var self=this;var dataParams=[];dataParams.push({name:"url",value:opt.sparqlUrl});dataParams.push({name:"query",value:escape(query)});dataParams.push({name:"format",value:format});Biojs.console.log("Requesting Query: "+query);this._request=jQuery.ajax({url:opt.proxyUrl,dataType:"text",data:dataParams,success:function(data){Biojs.console.log("Data received");fnCallback.call(self,data);}});},_filterByMinFrequency:function(minFreq){var result=this._data;if(minFreq>1){for(var key in result){if(result[key].freq<minFreq){Biojs.console.log("Filtered item "+key);delete result[key];}}}
return result;},_topicObjectCache:{key:undefined},_getTopicObject:function(topicKey){topicObject=undefined;if(this._topicObjectCache.key==topicKey){topicObject=this._topicObjectCache.value;}else if(this._topicsMap.hasOwnProperty(topicKey)){topicObject=this._topicsMap[topicKey];this._topicObjectCache.key=topicKey;this._topicObjectCache.value=topicObject;}
return topicObject;},_groupByTerm:function(){var result={};var termValue,annotation;var topic,topicID,topicObject,topicKey,topicURI;this._data=result;this.opt.groupBy=Biojs.Annotations.GROUP_BY_TERM;if(Biojs.Utils.isEmpty(this._dataBindings)){return result;}
for(r in this._dataBindings){try{annotation=this._dataBindings[r];topicURI=annotation.topic.value;topicKey=topicURI.replace(/(#|_|:|\/)([A-Za-z0-9])*$/g,'');entityID=this._digest(topicURI);termValue=annotation.term.value;topicObject=this._getTopicObject(topicKey);topicID=topicObject.shortName;if(!Biojs.Utils.isEmpty(topicObject)){if(!result.hasOwnProperty(termValue)){term={};term.name=termValue;term.id=termValue;term.topics={};term.freq=0;term.comments=[];term.getEntities=function(){var result={};var entities;for(var t in this.topics){entities=this.topics[t].getEntities();for(e in entities){if(entities.hasOwnProperty(e))result[e]=entities[e];}}
return result;};term.getFrequency=function(){var result=0;var entities;for(var t in this.topics){entities=this.topics[t].getEntities();for(var e in entities){if(entities.hasOwnProperty(e))result++;}}
return result;};result[termValue]=term;}
term=result[termValue];if(!term.topics.hasOwnProperty(topicID)){topic={};topic.map=topicObject;topic.entities={};topic.comments=[];topic.getEntities=function(){return this.entities;}
term.topics[topicID]=topic;}
topic=term.topics[topicID];topic.entities[entityID]=(topicURI);term.comments.push([annotation.comment.value]);}}catch(e){Biojs.console.log("Topic "+topicURI+" not recognized. Error: "+e.message);}}
for(var term in result){result[term].freq=result[term].getFrequency();}
return this._filterByMinFrequency(this.opt.minFrequency);},_groupByTopic:function(){var result={};var termValue,annotation;var topic,topicID,topicObject,topicKey,topicURI;this._data=result;this.opt.groupBy=Biojs.Annotations.GROUP_BY_TOPIC;if(Biojs.Utils.isEmpty(this._dataBindings)){return result;}
for(r in this._dataBindings){try{annotation=this._dataBindings[r];topicURI=annotation.topic.value;topicKey=topicURI.replace(/(#|_|:|\/)([A-Za-z0-9])*$/g,'');entityID=this._digest(topicURI);termValue=annotation.term.value;topicObject=this._getTopicObject(topicKey);topicID=topicObject.shortName;if(!Biojs.Utils.isEmpty(topicObject)){if(!result.hasOwnProperty(topicID)){topic={};topic.map=topicObject;topic.id=topicID;topic.name=topicID;topic.terms={};topic.freq=0;topic.comments=[];topic.getEntities=function(){var result={};var entities;for(var t in this.terms){entities=this.terms[t].getEntities();for(e in entities){if(entities.hasOwnProperty(e))result[e]=entities[e];}}
return result;};topic.getFrequency=function(){var result=0;var entities;for(var t in this.terms){entities=this.terms[t].getEntities();for(e in entities){if(entities.hasOwnProperty(e))result++;}}
return result;};result[topicID]=topic;}
topic=result[topicID];if(!topic.terms.hasOwnProperty(termValue)){term={};term.value=termValue;term.entities={};term.comments=[];term.getEntities=function(){return this.entities;}
topic.terms[termValue]=term;}
term=topic.terms[termValue];term.entities[entityID]=(topicURI);topic.comments.push([annotation.comment.value]);}}catch(e){Biojs.console.log("Topic "+topicURI+" not recognized. Error: "+e.message);}}
for(var term in result){result[term].freq=result[term].getFrequency();}
return this._filterByMinFrequency(this.opt.minFrequency);}},{EVT_ON_DATA_ARRIVED:"onDataArrived",GROUP_BY_TOPIC:"topic",GROUP_BY_TERM:"term",TOPIC:{"http://purl.obolibrary.org/obo/CHEBI":{shortName:"chebi",baseUrl:"http://identifiers.org/obo.chebi/CHEBI:",prefix:"CHEBI:",color:"#D6A100"},"http://purl.org/obo/owl/GO#GO":{shortName:"go",baseUrl:"http://identifiers.org/obo.go/GO:",prefix:"GO:",color:"#0067E6"},"http://purl.org/obo/owl/PW#PW":{shortName:"pw",baseUrl:"http://purl.org/obo/owl/PW#PW_",prefix:"",color:"#00DAE6"},"http://mged.sourceforge.net/ontologies/MGEDOntology.owl":{shortName:"mged",baseUrl:"http://mged.sourceforge.net/ontologies/MGEDOntology.owl#",prefix:"",color:"#6961FF"},"http://purl.uniprot.org/core":{shortName:"uniprot",baseUrl:"http://identifiers.org/uniprot/",prefix:"",color:"#61A8FF"},"http://purl.bioontology.org/ontology/MDDB":{shortName:"mddb",baseUrl:"http://purl.bioontology.org/ontology/MDDB/",prefix:"",color:"#FF61A8"},"http://purl.bioontology.org/ontology/NDDF":{shortName:"nddf",baseUrl:"http://purl.bioontology.org/ontology/NDDF/",prefix:"",color:"#C7005A"},"http://purl.bioontology.org/ontology/NDFRT":{shortName:"ndfrt",baseUrl:"http://purl.bioontology.org/ontology/NDFRT/",prefix:"",color:"#FF0F4B"},"http://purl.bioontology.org/ontology/MEDLINEPLUS":{shortName:"medline",baseUrl:"http://purl.bioontology.org/ontology/MEDLINEPLUS/",prefix:"",color:"#329D27"},"http://purl.bioontology.org/ontology/SNOMEDCT":{shortName:"snomed",baseUrl:"http://purl.bioontology.org/ontology/SNOMEDCT/",prefix:"",color:"#AAD864"},"http://purl.org/obo/owl/SYMP#SYMP":{shortName:"symptom",baseUrl:"http://purl.org/obo/owl/SYMP#SYMP_",prefix:"",color:"#A2E7BD"},"http://purl.bioontology.org/ontology/MDR":{shortName:"meddra",baseUrl:"http://purl.bioontology.org/ontology/MDR/",prefix:"",color:"#99CC00"},"http://purl.bioontology.org/ontology/MSH":{shortName:"mesh",baseUrl:"http://purl.bioontology.org/ontology/MSH/",prefix:"",color:"#669980"},"http://purl.bioontology.org/ontology/OMIM":{shortName:"omim",baseUrl:"http://identifiers.org/omim/",prefix:"",color:"#989966"},"http://purl.bioontology.org/ontology/ICD9-9":{shortName:"icd9",baseUrl:"http://identifiers.org/icd/",prefix:"",color:"#CABDAF"},"http://www.ifomis.org/bfo/1.1/span":{shortName:"obi",baseUrl:"http://identifiers.org/obo.obi/OBI_",prefix:"",color:"#806699"},"http://berkeleybop.org/obo/UMLS":{shortName:"umls",baseUrl:"http://berkeleybop.org/obo/UMLS:",prefix:"",color:"#CC00FF"},"http://purl.bioontology.org/ontology/PO":{shortName:"po",baseUrl:"http://purl.bioontology.org/ontology/PO/",prefix:"",color:"#007D00"},"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl":{shortName:"ncithesaurus",baseUrl:"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl",prefix:"",color:"#9C38FF"},"http://purl.org/obo/owl/NCBITaxon#NCBITaxon":{shortName:"ncbitaxon",baseUrl:"http://identifiers.org/taxonomy/",prefix:"",color:"#5E00BD"}}});