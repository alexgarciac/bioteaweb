
Biojs.AnnotationsCloud=Biojs.TagCloud.extend({constructor:function(options){this.base();this._container.addClass('AnnotationsCloud');},opt:{target:"YourOwnDivId",sparqlUrl:'http://virtuoso.idiginfo.org/sparql',proxyUrl:'biojs/dependencies/proxy/proxy.php'},eventTypes:["onTopicOver","onTopicClicked","onAnnotationClicked","onAnnotationOver"],_initialize:function(container){var opt=this.opt;if(opt.title!==undefined){this._title=jQuery('<div>'+opt.title+'</div>').appendTo(container);}
this._tags=jQuery('<ul class="tags"></ul>').appendTo(container);},requestAnnotations:function(resourceURI,cbCompleted){var self=this;self.removeAll();self._container.addClass('loading');strQuery='SELECT '+'distinct ?annot fn:upper-case(str(?body)) AS ?term '+'?topic str(?init) AS ?posInit str(?end) AS ?posEnd ?comment '+'WHERE { '+'?annot a aot:ExactQualifier ; '+'ao:annotatesResource <'+resourceURI+'>; '+'ao:body ?body ; '+'ao:hasTopic ?topic ; '+'ao:context ?context . '+'?context rdfs:resource ?resource . '+'OPTIONAL {?context aos:init ?init }. '+'OPTIONAL {?context aos:end ?end } . '+'?resource cnt:chars ?comment .  '+'FILTER (regex(str(?topic), "(uniprot|GO|CHEBI|ICD9|UMLS|fma|MSH|PO|MDDB|NDDF|NDFRT|NCBITaxon)")) . } '+'ORDER BY ?term ?topic';this._doSparqlQuery(this.opt,strQuery,'application/json',function(data){self._data=this._decodeResponse(data);this._paintAnnotations();this._container.removeClass('loading');this.onTagOver(function(e){var annotation=self._getAnnotation(e.tagId);self.raiseEvent(Biojs.AnnotationsCloud.EVT_ON_ANNOTATION_OVER,{name:annotation.name,freq:annotation.freq,comments:annotation.comments});});cbCompleted.call();});},_getAnnotation:function(tagId){var a={};try{a=this._data[parseInt(tagId)];}catch(e){Biojs.console.log(e);}
return a;},_paintAnnotations:function(){var self=this;var annotations=self._data;for(a in annotations){this.addTag(annotations[a],function(tagId,tagName,tagValueNode){Biojs.console.log("Clicked tag id: "+tagId);var annotation=annotations[parseInt(tagId)];self.raiseEvent(Biojs.AnnotationsCloud.EVT_ON_ANNOTATION_CLICKED,{name:annotation.name,freq:annotation.freq,comments:annotation.comments});var topics=annotation.topics;var topicList=jQuery('<span class="topics"></span>');var topic,lastTopic={shortName:""},topicNode;for(t in annotation.topics){topic=annotation.topics[t].topic;if(lastTopic.shortName!=topic.shortName){topicNode=jQuery('<a class="topic '+topic.shortName+'">'+topic.shortName+'</a>').attr({href:topic.baseUrl,target:'_blank',topicType:topic.shortName}).css('color',topic.color).appendTo(topicList);lastTopic=topic;}}
var tagId=tagId;var simpleTip=new Biojs.Tooltip({targetSelector:topicList.children(),cbRender:function(element){return self._paintTopics(tagId,jQuery(element).attr('topicType'));},arrowType:Biojs.Tooltip.ARROW_TOP_MIDDLE});return topicList;});}},_paintTopics:function(tagId,topicType){var self=this;var annotation=self._getAnnotation(tagId);var pattern=/(#|_|:|\/)([A-Za-z0-9])*$/g;self.raiseEvent(Biojs.AnnotationsCloud.EVT_ON_ANNOTATION_CLICKED,{name:annotation.name,freq:annotation.freq,comments:annotation.comments});var topicList=jQuery('<span class="topics"></span>');var topic,identifier;for(t in annotation.topics){topic=annotation.topics[t].topic;if(topic.shortName==topicType){identifier=(annotation.topics[t].value.match(pattern)[0]).substr(1);jQuery('<a class="topic '+topic.shortName+'">'+topic.prefix+identifier+'</a>').attr({href:topic.baseUrl+identifier,target:'_blank',topicType:topic.shortName,topicId:identifier}).css('color',topic.color).mouseover(function(e){var target=jQuery(e.target);self.raiseEvent(Biojs.AnnotationsCloud.EVT_ON_TOPIC_OVER,{href:target.attr("href"),topicType:target.attr("topicType"),topicId:target.attr("topicId")});}).click(function(e){e.preventDefault();var target=jQuery(e.target);self.raiseEvent(Biojs.AnnotationsCloud.EVT_ON_TOPIC_CLICKED,{href:target.attr("href"),topicType:target.attr("topicType"),topicId:target.attr("topicId")});}).appendTo(topicList);}}
return topicList;},_decodeResponse:function(dataReceived){var dataBindings=[];try{var decodedData=jQuery.parseJSON(dataReceived);dataBindings=decodedData.results.bindings;}catch(e){Biojs.console.log("Error decoding response data: "+e.message);}
return this._decodeAnnotations(dataBindings);},_decodeAnnotations:function(dataBindings){var result=[];var previousTerm="",currentTerm="",currentTopic="",previousTopic="";var term,i=0,currentComment="",topicObject;for(r in dataBindings){try{var annotation=dataBindings[r];currentTopic=annotation.topic.value;topicObject=Biojs.AnnotationsCloud.TOPIC[currentTopic.replace(/(#|_|:|\/)([A-Za-z0-9])*$/g,'')];currentTerm=annotation.term.value;if(topicObject.shortName&&currentTerm!=previousTerm){term={id:i,name:currentTerm,freq:0,topics:[],comments:[]};result.push(term);i++;}
if(currentTopic!=previousTopic){term.topics.push({value:currentTopic,topic:topicObject});term.freq++;if(currentComment!=annotation.comment.value){term.comments.push([this._highlightTermInComment(annotation)]);currentComment=annotation.comment.value;}}
previousTerm=currentTerm;previousTopic=currentTopic;}catch(e){Biojs.console.log("Topic "+currentTopic+" not recognized.");}}
return result;},_highlightTermInComment:function(annotation){var comment="",t="";var start=0;var end=0;var text="";if(annotation.comment!=undefined&&!Biojs.Utils.isEmpty(annotation.comment.value)){comment=new String(annotation.comment.value);try{t=annotation.term.value;start=parseInt(annotation.posInit.value)-1;end=parseInt(annotation.posEnd.value);Biojs.console.log("Tag position -> "+start+":"+end+" for "+t);text="<span class='highlight'>"+annotation.term.value+"</span>";comment=comment.slice(0,start)+text+comment.slice(end);return comment;}catch(e){Biojs.console.log("Tag position not found. Using manual highlighting for "+t);}
comment=comment.replace(new RegExp(t.toLowerCase(),'gi'),"<span class='highlight'>"+t+"</span>");}
return comment;},_doSparqlQuery:function(opt,query,format,actionCb){var self=this;var dataParams=[];dataParams.push({name:"url",value:opt.sparqlUrl});dataParams.push({name:"query",value:escape(query)});dataParams.push({name:"format",value:format});Biojs.console.log("Requesting Query: "+query);jQuery.ajax({url:opt.proxyUrl,dataType:"text",data:dataParams,success:function(data){Biojs.console.log("Data received");actionCb.call(self,data);}});}},{EVT_ON_TOPIC_OVER:"onTopicOver",EVT_ON_TOPIC_CLICKED:"onTopicClicked",EVT_ON_ANNOTATION_CLICKED:"onAnnotationClicked",EVT_ON_ANNOTATION_OVER:"onAnnotationOver",TOPIC:{"http://purl.obolibrary.org/obo/CHEBI":{shortName:"chebi",baseUrl:"http://identifiers.org/obo.chebi/CHEBI:",prefix:"CHEBI:",color:"#D6A100"},"http://purl.org/obo/owl/GO#GO":{shortName:"go",baseUrl:"http://identifiers.org/obo.go/GO:",prefix:"GO:",color:"#0067E6"},"http://purl.org/obo/owl/PW#PW":{shortName:"pw",baseUrl:"http://purl.org/obo/owl/PW#PW_",prefix:"",color:"#00DAE6"},"http://mged.sourceforge.net/ontologies/MGEDOntology.owl":{shortName:"mged",baseUrl:"http://mged.sourceforge.net/ontologies/MGEDOntology.owl#",prefix:"",color:"#6961FF"},"http://purl.uniprot.org/core":{shortName:"uniprot",baseUrl:"http://identifiers.org/uniprot/",prefix:"",color:"#61A8FF"},"http://purl.bioontology.org/ontology/MDDB":{shortName:"mddb",baseUrl:"http://purl.bioontology.org/ontology/MDDB/",prefix:"",color:"#FF61A8"},"http://purl.bioontology.org/ontology/NDDF":{shortName:"nddf",baseUrl:"http://purl.bioontology.org/ontology/NDDF/",prefix:"",color:"#C7005A"},"http://purl.bioontology.org/ontology/NDFRT":{shortName:"ndfrt",baseUrl:"http://purl.bioontology.org/ontology/NDFRT/",prefix:"",color:"#FF0F4B"},"http://purl.bioontology.org/ontology/MEDLINEPLUS":{shortName:"medline",baseUrl:"http://purl.bioontology.org/ontology/MEDLINEPLUS/",prefix:"",color:"#329D27"},"http://purl.bioontology.org/ontology/SNOMEDCT":{shortName:"snomed",baseUrl:"http://purl.bioontology.org/ontology/SNOMEDCT/",prefix:"",color:"#AAD864"},"http://purl.org/obo/owl/SYMP#SYMP":{shortName:"symptom",baseUrl:"http://purl.org/obo/owl/SYMP#SYMP_",prefix:"",color:"#A2E7BD"},"http://purl.bioontology.org/ontology/MDR":{shortName:"meddra",baseUrl:"http://purl.bioontology.org/ontology/MDR/",prefix:"",color:"#99CC00"},"http://purl.bioontology.org/ontology/MSH":{shortName:"mesh",baseUrl:"http://purl.bioontology.org/ontology/MSH/",prefix:"",color:"#669980"},"http://purl.bioontology.org/ontology/OMIM":{shortName:"omim",baseUrl:"http://identifiers.org/omim/",prefix:"",color:"#989966"},"http://purl.bioontology.org/ontology/ICD9-9":{shortName:"icd9",baseUrl:"http://identifiers.org/icd/",prefix:"",color:"#CABDAF"},"http://www.ifomis.org/bfo/1.1/span":{shortName:"obi",baseUrl:"http://identifiers.org/obo.obi/OBI_",prefix:"",color:"#806699"},"http://berkeleybop.org/obo/UMLS":{shortName:"umls",baseUrl:"http://berkeleybop.org/obo/UMLS:",prefix:"",color:"#CC00FF"},"http://purl.bioontology.org/ontology/PO":{shortName:"po",baseUrl:"http://purl.bioontology.org/ontology/PO/",prefix:"",color:"#007D00"},"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl":{shortName:"ncithesaurus",baseUrl:"http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl",prefix:"",color:"#9C38FF"},"http://purl.org/obo/owl/NCBITaxon#NCBITaxon":{shortName:"ncbitaxon",baseUrl:"http://identifiers.org/taxonomy/",prefix:"",color:"#5E00BD"}}});